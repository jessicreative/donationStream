export type ErrorType = "FRAMEWORK_INITIALIZATION" | "SUPERTOKEN_INITIALIZATION" | "CREATE_SIGNER" | "SUPERTOKEN_READ" | "CFAV1_READ" | "IDAV1_READ" | "INVALID_ADDRESS" | "INVALID_OBJECT" | "UNCLEAN_PERMISSIONS" | "NEGATIVE_FLOW_ALLOWANCE" | "UNSUPPORTED_OPERATION" | "MISSING_TRANSACTION_PROPERTIES" | "BATCH_CALL_ERROR" | "NETWORK_MISMATCH";
interface ErrorProps {
    type: ErrorType;
    message: string;
    cause?: Error | unknown;
}
export declare class SFError extends Error {
    readonly type: ErrorType;
    readonly cause?: Error;
    constructor({ type, message, cause }: ErrorProps);
}
export {};
//# sourceMappingURL=SFError.d.ts.map