import * as Types from '../schema.generated';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type FlowUpdatedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.FlowUpdatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.FlowUpdatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type FlowUpdatedEventsQuery = {
    flowUpdatedEvents: Array<{
        __typename: 'FlowUpdatedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        userData: string;
        type: number;
        token: string;
        sender: string;
        receiver: string;
        flowRate: string;
        flowOperator: string;
        deposit: string;
        stream: {
            id: string;
        };
    }>;
};
export type FlowOperatorUpdatedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.FlowOperatorUpdatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.FlowOperatorUpdatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type FlowOperatorUpdatedEventsQuery = {
    flowOperatorUpdatedEvents: Array<{
        __typename: 'FlowOperatorUpdatedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        token: string;
        sender: string;
        permissions: number;
        flowRateAllowance: string;
    }>;
};
export type IndexCreatedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.IndexCreatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.IndexCreatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type IndexCreatedEventsQuery = {
    indexCreatedEvents: Array<{
        __typename: 'IndexCreatedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        userData: string;
        token: string;
        publisher: string;
        indexId: string;
        index: {
            id: string;
        };
    }>;
};
export type IndexDistributionClaimedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.IndexDistributionClaimedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.IndexDistributionClaimedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type IndexDistributionClaimedEventsQuery = {
    indexDistributionClaimedEvents: Array<{
        __typename: 'IndexDistributionClaimedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        token: string;
        subscriber: string;
        publisher: string;
        indexId: string;
        amount: string;
        index: {
            id: string;
        };
    }>;
};
export type IndexUpdatedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.IndexUpdatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.IndexUpdatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type IndexUpdatedEventsQuery = {
    indexUpdatedEvents: Array<{
        __typename: 'IndexUpdatedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        userData: string;
        totalUnitsPending: string;
        totalUnitsApproved: string;
        token: string;
        publisher: string;
        oldIndexValue: string;
        newIndexValue: string;
        indexId: string;
        index: {
            id: string;
        };
    }>;
};
export type IndexSubscribedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.IndexSubscribedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.IndexSubscribedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type IndexSubscribedEventsQuery = {
    indexSubscribedEvents: Array<{
        __typename: 'IndexSubscribedEvent';
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        id: string;
        userData: string;
        token: string;
        subscriber: string;
        publisher: string;
        indexId: string;
        index: {
            id: string;
        };
    }>;
};
export type IndexUnitsUpdatedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.IndexUnitsUpdatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.IndexUnitsUpdatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type IndexUnitsUpdatedEventsQuery = {
    indexUnitsUpdatedEvents: Array<{
        __typename: 'IndexUnitsUpdatedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        userData: string;
        units: string;
        token: string;
        subscriber: string;
        publisher: string;
        oldUnits: string;
        indexId: string;
        index: {
            id: string;
        };
    }>;
};
export type IndexUnsubscribedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.IndexUnsubscribedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.IndexUnsubscribedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type IndexUnsubscribedEventsQuery = {
    indexUnsubscribedEvents: Array<{
        __typename: 'IndexUnsubscribedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        userData: string;
        token: string;
        subscriber: string;
        publisher: string;
        indexId: string;
        index: {
            id: string;
        };
    }>;
};
export type SubscriptionApprovedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SubscriptionApprovedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SubscriptionApprovedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type SubscriptionApprovedEventsQuery = {
    subscriptionApprovedEvents: Array<{
        __typename: 'SubscriptionApprovedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        userData: string;
        token: string;
        subscriber: string;
        publisher: string;
        indexId: string;
        subscription: {
            id: string;
        };
    }>;
};
export type SubscriptionDistributionClaimedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SubscriptionDistributionClaimedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SubscriptionDistributionClaimedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type SubscriptionDistributionClaimedEventsQuery = {
    subscriptionDistributionClaimedEvents: Array<{
        __typename: 'SubscriptionDistributionClaimedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        token: string;
        subscriber: string;
        publisher: string;
        indexId: string;
        amount: string;
        subscription: {
            id: string;
        };
    }>;
};
export type SubscriptionRevokedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SubscriptionRevokedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SubscriptionRevokedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type SubscriptionRevokedEventsQuery = {
    subscriptionRevokedEvents: Array<{
        __typename: 'SubscriptionRevokedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        userData: string;
        subscriber: string;
        publisher: string;
        indexId: string;
        token: string;
        subscription: {
            id: string;
        };
    }>;
};
export type SubscriptionUnitsUpdatedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SubscriptionUnitsUpdatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SubscriptionUnitsUpdatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type SubscriptionUnitsUpdatedEventsQuery = {
    subscriptionUnitsUpdatedEvents: Array<{
        __typename: 'SubscriptionUnitsUpdatedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        userData: string;
        units: string;
        token: string;
        subscriber: string;
        publisher: string;
        oldUnits: string;
        indexId: string;
        subscription: {
            id: string;
        };
    }>;
};
export type TransferEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.TransferEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.TransferEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type TransferEventsQuery = {
    transferEvents: Array<{
        __typename: 'TransferEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        value: string;
        token: string;
        to: {
            id: string;
        };
        from: {
            id: string;
        };
    }>;
};
export type TokenUpgradedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.TokenUpgradedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.TokenUpgradedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type TokenUpgradedEventsQuery = {
    tokenUpgradedEvents: Array<{
        __typename: 'TokenUpgradedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        amount: string;
        token: string;
        account: {
            id: string;
        };
    }>;
};
export type TokenDowngradedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.TokenDowngradedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.TokenDowngradedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type TokenDowngradedEventsQuery = {
    tokenDowngradedEvents: Array<{
        __typename: 'TokenDowngradedEvent';
        id: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        token: string;
        blockNumber: string;
        amount: string;
        account: {
            id: string;
        };
    }>;
};
export type AgreementClassRegisteredEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.AgreementClassRegisteredEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.AgreementClassRegisteredEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type AgreementClassRegisteredEventsQuery = {
    agreementClassRegisteredEvents: Array<{
        __typename: 'AgreementClassRegisteredEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        code: string;
        agreementType: string;
    }>;
};
export type AgreementClassUpdatedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.AgreementClassUpdatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.AgreementClassUpdatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type AgreementClassUpdatedEventsQuery = {
    agreementClassUpdatedEvents: Array<{
        __typename: 'AgreementClassUpdatedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        code: string;
        agreementType: string;
    }>;
};
export type AppRegisteredEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.AppRegisteredEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.AppRegisteredEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type AppRegisteredEventsQuery = {
    appRegisteredEvents: Array<{
        __typename: 'AppRegisteredEvent';
        id: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        blockNumber: string;
        app: string;
    }>;
};
export type GovernanceReplacedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.GovernanceReplacedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.GovernanceReplacedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type GovernanceReplacedEventsQuery = {
    governanceReplacedEvents: Array<{
        __typename: 'GovernanceReplacedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        oldGovernance: string;
        newGovernance: string;
    }>;
};
export type JailEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.JailEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.JailEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type JailEventsQuery = {
    jailEvents: Array<{
        __typename: 'JailEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        reason: string;
        app: string;
    }>;
};
export type SuperTokenFactoryUpdatedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SuperTokenFactoryUpdatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SuperTokenFactoryUpdatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type SuperTokenFactoryUpdatedEventsQuery = {
    superTokenFactoryUpdatedEvents: Array<{
        __typename: 'SuperTokenFactoryUpdatedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        newFactory: string;
    }>;
};
export type SuperTokenLogicUpdatedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SuperTokenLogicUpdatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SuperTokenLogicUpdatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type SuperTokenLogicUpdatedEventsQuery = {
    superTokenLogicUpdatedEvents: Array<{
        __typename: 'SuperTokenLogicUpdatedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        token: string;
        code: string;
    }>;
};
export type RoleAdminChangedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.RoleAdminChangedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.RoleAdminChangedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type RoleAdminChangedEventsQuery = {
    roleAdminChangedEvents: Array<{
        __typename: 'RoleAdminChangedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        role: string;
        previousAdminRole: string;
        newAdminRole: string;
    }>;
};
export type RoleGrantedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.RoleGrantedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.RoleGrantedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type RoleGrantedEventsQuery = {
    roleGrantedEvents: Array<{
        __typename: 'RoleGrantedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        sender: string;
        role: string;
        account: string;
    }>;
};
export type RoleRevokedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.RoleRevokedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.RoleRevokedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type RoleRevokedEventsQuery = {
    roleRevokedEvents: Array<{
        __typename: 'RoleRevokedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        sender: string;
        role: string;
        account: string;
    }>;
};
export type SetEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SetEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SetEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type SetEventsQuery = {
    setEvents: Array<{
        __typename: 'SetEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        hashedName: string;
        target: string;
        resolverEntry: {
            id: string;
        };
    }>;
};
export type CfaV1LiquidationPeriodChangedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.CfAv1LiquidationPeriodChangedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.CfAv1LiquidationPeriodChangedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type CfaV1LiquidationPeriodChangedEventsQuery = {
    cfav1LiquidationPeriodChangedEvents: Array<{
        __typename: 'CFAv1LiquidationPeriodChangedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        superToken: string;
        host: string;
        governanceAddress: string;
        liquidationPeriod: string;
        isKeySet: boolean;
    }>;
};
export type ConfigChangedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.ConfigChangedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.ConfigChangedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type ConfigChangedEventsQuery = {
    configChangedEvents: Array<{
        __typename: 'ConfigChangedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        value: string;
        superToken: string;
        key: string;
        isKeySet: boolean;
        host: string;
        governanceAddress: string;
    }>;
};
export type RewardAddressChangedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.RewardAddressChangedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.RewardAddressChangedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type RewardAddressChangedEventsQuery = {
    rewardAddressChangedEvents: Array<{
        __typename: 'RewardAddressChangedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        superToken: string;
        rewardAddress: string;
        isKeySet: boolean;
        host: string;
        governanceAddress: string;
    }>;
};
export type SuperTokenMinimumDepositChangedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SuperTokenMinimumDepositChangedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SuperTokenMinimumDepositChangedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type SuperTokenMinimumDepositChangedEventsQuery = {
    superTokenMinimumDepositChangedEvents: Array<{
        __typename: 'SuperTokenMinimumDepositChangedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        superToken: string;
        minimumDeposit: string;
        isKeySet: boolean;
        host: string;
        governanceAddress: string;
    }>;
};
export type TrustedForwarderChangedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.TrustedForwarderChangedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.TrustedForwarderChangedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type TrustedForwarderChangedEventsQuery = {
    trustedForwarderChangedEvents: Array<{
        __typename: 'TrustedForwarderChangedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        isKeySet: boolean;
        host: string;
        governanceAddress: string;
        forwarder: string;
        enabled: boolean;
        superToken: string;
    }>;
};
export type AgreementLiquidatedByEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.AgreementLiquidatedByEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.AgreementLiquidatedByEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type AgreementLiquidatedByEventsQuery = {
    agreementLiquidatedByEvents: Array<{
        __typename: 'AgreementLiquidatedByEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        token: string;
        rewardAmount: string;
        penaltyAccount: string;
        liquidatorAccount: string;
        bondAccount: string;
        bailoutAmount: string;
        agreementId: string;
        agreementClass: string;
    }>;
};
export type BurnedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.BurnedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.BurnedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type BurnedEventsQuery = {
    burnedEvents: Array<{
        __typename: 'BurnedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        operatorData: string;
        token: string;
        operator: string;
        from: string;
        data: string;
        amount: string;
    }>;
};
export type MintedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.MintedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.MintedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type MintedEventsQuery = {
    mintedEvents: Array<{
        __typename: 'MintedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        operatorData: string;
        token: string;
        operator: string;
        data: string;
        amount: string;
        to: string;
    }>;
};
export type SentEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SentEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SentEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type SentEventsQuery = {
    sentEvents: Array<{
        __typename: 'SentEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        to: string;
        operatorData: string;
        token: string;
        operator: string;
        data: string;
        amount: string;
    }>;
};
export type CustomSuperTokenCreatedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.CustomSuperTokenCreatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.CustomSuperTokenCreatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type CustomSuperTokenCreatedEventsQuery = {
    customSuperTokenCreatedEvents: Array<{
        __typename: 'CustomSuperTokenCreatedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        token: string;
    }>;
};
export type SuperTokenCreatedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SuperTokenCreatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SuperTokenCreatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type SuperTokenCreatedEventsQuery = {
    superTokenCreatedEvents: Array<{
        __typename: 'SuperTokenCreatedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        token: string;
    }>;
};
export type SuperTokenLogicCreatedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SuperTokenLogicCreatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SuperTokenLogicCreatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type SuperTokenLogicCreatedEventsQuery = {
    superTokenLogicCreatedEvents: Array<{
        __typename: 'SuperTokenLogicCreatedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        tokenLogic: string;
    }>;
};
export type NewPicEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.NewPicEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.NewPicEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type NewPicEventsQuery = {
    newPICEvents: Array<{
        __typename: 'NewPICEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        token: string;
        pic: string;
        bond: string;
        exitRate: string;
    }>;
};
export type ExitRateChangedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.ExitRateChangedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.ExitRateChangedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type ExitRateChangedEventsQuery = {
    exitRateChangedEvents: Array<{
        __typename: 'ExitRateChangedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        token: string;
        exitRate: string;
    }>;
};
export type BondIncreasedEventsQueryVariables = Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.BondIncreasedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.BondIncreasedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type BondIncreasedEventsQuery = {
    bondIncreasedEvents: Array<{
        __typename: 'BondIncreasedEvent';
        id: string;
        blockNumber: string;
        transactionHash: string;
        gasPrice: string;
        order: string;
        timestamp: string;
        logIndex: string;
        token: string;
        additionalBond: string;
    }>;
};
export type EventsQueryVariables = Types.Exact<{
    where?: Types.Event_Filter;
    skip?: Types.Scalars['Int'];
    first?: Types.Scalars['Int'];
    orderBy?: Types.Event_OrderBy;
    orderDirection?: Types.OrderDirection;
    block?: Types.InputMaybe<Types.Block_Height>;
}>;
export type EventsQuery = {
    events: Array<{
        __typename: 'AgreementClassRegisteredEvent';
        code: string;
        agreementType: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'AgreementClassUpdatedEvent';
        code: string;
        agreementType: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'AgreementLiquidatedByEvent';
        token: string;
        rewardAmount: string;
        penaltyAccount: string;
        liquidatorAccount: string;
        bondAccount: string;
        bailoutAmount: string;
        agreementId: string;
        agreementClass: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'AgreementLiquidatedV2Event';
        token: string;
        liquidatorAccount: string;
        agreementClass: string;
        agreementId: string;
        targetAccount: string;
        rewardAmountReceiver: string;
        rewardAmount: string;
        targetAccountBalanceDelta: string;
        version: string;
        liquidationType: number;
        rewardAccount: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'AppRegisteredEvent';
        app: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'BondIncreasedEvent';
        token: string;
        additionalBond: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'BurnedEvent';
        operatorData: string;
        token: string;
        operator: string;
        from: string;
        data: string;
        amount: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'CFAv1LiquidationPeriodChangedEvent';
        superToken: string;
        host: string;
        governanceAddress: string;
        liquidationPeriod: string;
        isKeySet: boolean;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'ConfigChangedEvent';
        value: string;
        superToken: string;
        key: string;
        isKeySet: boolean;
        host: string;
        governanceAddress: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'CustomSuperTokenCreatedEvent';
        token: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'ExitRateChangedEvent';
        token: string;
        exitRate: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'FlowOperatorUpdatedEvent';
        token: string;
        sender: string;
        permissions: number;
        flowRateAllowance: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'FlowUpdatedEvent';
        userData: string;
        type: number;
        token: string;
        sender: string;
        receiver: string;
        flowRate: string;
        flowOperator: string;
        deposit: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
        stream: {
            id: string;
        };
    } | {
        __typename: 'GovernanceReplacedEvent';
        oldGovernance: string;
        newGovernance: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'IndexCreatedEvent';
        userData: string;
        token: string;
        publisher: string;
        indexId: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
        index: {
            id: string;
        };
    } | {
        __typename: 'IndexDistributionClaimedEvent';
        token: string;
        subscriber: string;
        publisher: string;
        indexId: string;
        amount: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
        index: {
            id: string;
        };
    } | {
        __typename: 'IndexSubscribedEvent';
        userData: string;
        token: string;
        subscriber: string;
        publisher: string;
        indexId: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
        index: {
            id: string;
        };
    } | {
        __typename: 'IndexUnitsUpdatedEvent';
        userData: string;
        units: string;
        token: string;
        subscriber: string;
        publisher: string;
        oldUnits: string;
        indexId: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
        index: {
            id: string;
        };
    } | {
        __typename: 'IndexUnsubscribedEvent';
        userData: string;
        token: string;
        subscriber: string;
        publisher: string;
        indexId: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
        index: {
            id: string;
        };
    } | {
        __typename: 'IndexUpdatedEvent';
        userData: string;
        totalUnitsPending: string;
        totalUnitsApproved: string;
        token: string;
        publisher: string;
        oldIndexValue: string;
        newIndexValue: string;
        indexId: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
        index: {
            id: string;
        };
    } | {
        __typename: 'JailEvent';
        reason: string;
        app: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'MintedEvent';
        operatorData: string;
        token: string;
        operator: string;
        data: string;
        amount: string;
        to: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'NewPICEvent';
        token: string;
        pic: string;
        bond: string;
        exitRate: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'PPPConfigurationChangedEvent';
        host: string;
        governanceAddress: string;
        superToken: string;
        isKeySet: boolean;
        liquidationPeriod: string;
        patricianPeriod: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'RewardAddressChangedEvent';
        superToken: string;
        rewardAddress: string;
        isKeySet: boolean;
        host: string;
        governanceAddress: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'RoleAdminChangedEvent';
        role: string;
        previousAdminRole: string;
        newAdminRole: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'RoleGrantedEvent';
        sender: string;
        role: string;
        account: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'RoleRevokedEvent';
        sender: string;
        role: string;
        account: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'SentEvent';
        to: string;
        operatorData: string;
        token: string;
        operator: string;
        data: string;
        amount: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'SetEvent';
        hashedName: string;
        target: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
        resolverEntry: {
            id: string;
        };
    } | {
        __typename: 'SubscriptionApprovedEvent';
        userData: string;
        token: string;
        subscriber: string;
        publisher: string;
        indexId: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
        subscription: {
            id: string;
        };
    } | {
        __typename: 'SubscriptionDistributionClaimedEvent';
        token: string;
        subscriber: string;
        publisher: string;
        indexId: string;
        amount: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
        subscription: {
            id: string;
        };
    } | {
        __typename: 'SubscriptionRevokedEvent';
        userData: string;
        subscriber: string;
        publisher: string;
        indexId: string;
        token: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
        subscription: {
            id: string;
        };
    } | {
        __typename: 'SubscriptionUnitsUpdatedEvent';
        userData: string;
        units: string;
        token: string;
        subscriber: string;
        publisher: string;
        oldUnits: string;
        indexId: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
        subscription: {
            id: string;
        };
    } | {
        __typename: 'SuperTokenCreatedEvent';
        token: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'SuperTokenFactoryUpdatedEvent';
        newFactory: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'SuperTokenLogicCreatedEvent';
        tokenLogic: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'SuperTokenLogicUpdatedEvent';
        token: string;
        code: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'SuperTokenMinimumDepositChangedEvent';
        superToken: string;
        minimumDeposit: string;
        isKeySet: boolean;
        host: string;
        governanceAddress: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    } | {
        __typename: 'TokenDowngradedEvent';
        token: string;
        amount: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
        account: {
            id: string;
        };
    } | {
        __typename: 'TokenUpgradedEvent';
        amount: string;
        token: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
        account: {
            id: string;
        };
    } | {
        __typename: 'TransferEvent';
        value: string;
        token: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
        to: {
            id: string;
        };
        from: {
            id: string;
        };
    } | {
        __typename: 'TrustedForwarderChangedEvent';
        isKeySet: boolean;
        host: string;
        governanceAddress: string;
        forwarder: string;
        enabled: boolean;
        superToken: string;
        gasPrice: string;
        order: string;
        logIndex: string;
        id: string;
        blockNumber: string;
        transactionHash: string;
        timestamp: string;
    }>;
};
export declare const FlowUpdatedEventsDocument: DocumentNode<FlowUpdatedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.FlowUpdatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.FlowUpdatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const FlowOperatorUpdatedEventsDocument: DocumentNode<FlowOperatorUpdatedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.FlowOperatorUpdatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.FlowOperatorUpdatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const IndexCreatedEventsDocument: DocumentNode<IndexCreatedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.IndexCreatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.IndexCreatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const IndexDistributionClaimedEventsDocument: DocumentNode<IndexDistributionClaimedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.IndexDistributionClaimedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.IndexDistributionClaimedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const IndexUpdatedEventsDocument: DocumentNode<IndexUpdatedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.IndexUpdatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.IndexUpdatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const IndexSubscribedEventsDocument: DocumentNode<IndexSubscribedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.IndexSubscribedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.IndexSubscribedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const IndexUnitsUpdatedEventsDocument: DocumentNode<IndexUnitsUpdatedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.IndexUnitsUpdatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.IndexUnitsUpdatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const IndexUnsubscribedEventsDocument: DocumentNode<IndexUnsubscribedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.IndexUnsubscribedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.IndexUnsubscribedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const SubscriptionApprovedEventsDocument: DocumentNode<SubscriptionApprovedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SubscriptionApprovedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SubscriptionApprovedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const SubscriptionDistributionClaimedEventsDocument: DocumentNode<SubscriptionDistributionClaimedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SubscriptionDistributionClaimedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SubscriptionDistributionClaimedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const SubscriptionRevokedEventsDocument: DocumentNode<SubscriptionRevokedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SubscriptionRevokedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SubscriptionRevokedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const SubscriptionUnitsUpdatedEventsDocument: DocumentNode<SubscriptionUnitsUpdatedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SubscriptionUnitsUpdatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SubscriptionUnitsUpdatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const TransferEventsDocument: DocumentNode<TransferEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.TransferEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.TransferEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const TokenUpgradedEventsDocument: DocumentNode<TokenUpgradedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.TokenUpgradedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.TokenUpgradedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const TokenDowngradedEventsDocument: DocumentNode<TokenDowngradedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.TokenDowngradedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.TokenDowngradedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const AgreementClassRegisteredEventsDocument: DocumentNode<AgreementClassRegisteredEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.AgreementClassRegisteredEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.AgreementClassRegisteredEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const AgreementClassUpdatedEventsDocument: DocumentNode<AgreementClassUpdatedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.AgreementClassUpdatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.AgreementClassUpdatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const AppRegisteredEventsDocument: DocumentNode<AppRegisteredEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.AppRegisteredEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.AppRegisteredEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const GovernanceReplacedEventsDocument: DocumentNode<GovernanceReplacedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.GovernanceReplacedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.GovernanceReplacedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const JailEventsDocument: DocumentNode<JailEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.JailEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.JailEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const SuperTokenFactoryUpdatedEventsDocument: DocumentNode<SuperTokenFactoryUpdatedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SuperTokenFactoryUpdatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SuperTokenFactoryUpdatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const SuperTokenLogicUpdatedEventsDocument: DocumentNode<SuperTokenLogicUpdatedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SuperTokenLogicUpdatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SuperTokenLogicUpdatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const RoleAdminChangedEventsDocument: DocumentNode<RoleAdminChangedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.RoleAdminChangedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.RoleAdminChangedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const RoleGrantedEventsDocument: DocumentNode<RoleGrantedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.RoleGrantedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.RoleGrantedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const RoleRevokedEventsDocument: DocumentNode<RoleRevokedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.RoleRevokedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.RoleRevokedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const SetEventsDocument: DocumentNode<SetEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SetEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SetEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const CfaV1LiquidationPeriodChangedEventsDocument: DocumentNode<CfaV1LiquidationPeriodChangedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.CfAv1LiquidationPeriodChangedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.CfAv1LiquidationPeriodChangedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const ConfigChangedEventsDocument: DocumentNode<ConfigChangedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.ConfigChangedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.ConfigChangedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const RewardAddressChangedEventsDocument: DocumentNode<RewardAddressChangedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.RewardAddressChangedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.RewardAddressChangedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const SuperTokenMinimumDepositChangedEventsDocument: DocumentNode<SuperTokenMinimumDepositChangedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SuperTokenMinimumDepositChangedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SuperTokenMinimumDepositChangedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const TrustedForwarderChangedEventsDocument: DocumentNode<TrustedForwarderChangedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.TrustedForwarderChangedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.TrustedForwarderChangedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const AgreementLiquidatedByEventsDocument: DocumentNode<AgreementLiquidatedByEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.AgreementLiquidatedByEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.AgreementLiquidatedByEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const BurnedEventsDocument: DocumentNode<BurnedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.BurnedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.BurnedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const MintedEventsDocument: DocumentNode<MintedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.MintedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.MintedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const SentEventsDocument: DocumentNode<SentEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SentEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SentEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const CustomSuperTokenCreatedEventsDocument: DocumentNode<CustomSuperTokenCreatedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.CustomSuperTokenCreatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.CustomSuperTokenCreatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const SuperTokenCreatedEventsDocument: DocumentNode<SuperTokenCreatedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SuperTokenCreatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SuperTokenCreatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const SuperTokenLogicCreatedEventsDocument: DocumentNode<SuperTokenLogicCreatedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.SuperTokenLogicCreatedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.SuperTokenLogicCreatedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const NewPicEventsDocument: DocumentNode<NewPicEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.NewPicEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.NewPicEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const ExitRateChangedEventsDocument: DocumentNode<ExitRateChangedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.ExitRateChangedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.ExitRateChangedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const BondIncreasedEventsDocument: DocumentNode<BondIncreasedEventsQuery, Types.Exact<{
    first?: Types.InputMaybe<Types.Scalars['Int']>;
    skip?: Types.InputMaybe<Types.Scalars['Int']>;
    where?: Types.InputMaybe<Types.BondIncreasedEvent_Filter>;
    orderBy?: Types.InputMaybe<Types.BondIncreasedEvent_OrderBy>;
    orderDirection?: Types.InputMaybe<Types.OrderDirection>;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
export declare const EventsDocument: DocumentNode<EventsQuery, Types.Exact<{
    where?: Types.Event_Filter | undefined;
    skip?: number | undefined;
    first?: number | undefined;
    orderBy?: Types.Event_OrderBy | undefined;
    orderDirection?: Types.OrderDirection | undefined;
    block?: Types.InputMaybe<Types.Block_Height>;
}>>;
//# sourceMappingURL=events.generated.d.ts.map