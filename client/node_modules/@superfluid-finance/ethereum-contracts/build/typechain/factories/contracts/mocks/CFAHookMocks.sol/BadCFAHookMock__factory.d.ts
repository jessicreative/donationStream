import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { BadCFAHookMock, BadCFAHookMockInterface } from "../../../../contracts/mocks/CFAHookMocks.sol/BadCFAHookMock";
type BadCFAHookMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class BadCFAHookMock__factory extends ContractFactory {
    constructor(...args: BadCFAHookMockConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<BadCFAHookMock>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): BadCFAHookMock;
    connect(signer: Signer): BadCFAHookMock__factory;
    static readonly bytecode = "0x60a060405234801561001057600080fd5b50336080526080516102e461002f600039600060eb01526102e46000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632742e95a146100515780636ac5bc3114610051578063ad53099b14610078578063e3d8fefe1461008d575b600080fd5b61006461005f36600461020e565b61009b565b604051901515815260200160405180910390f35b61008b610086366004610254565b6100e0565b005b61006461005f366004610278565b600080546001600160a01b031633146100c757604051631f9bdf8b60e21b815260040160405180910390fd5b60405163746e8e9f60e11b815260040160405180910390fd5b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610129576040516338ebc58960e11b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116811461016057600080fd5b50565b8035600b81900b811461017557600080fd5b919050565b60006080828403121561018c57600080fd5b6040516080810181811067ffffffffffffffff821117156101bd57634e487b7160e01b600052604160045260246000fd5b60405290508082356101ce8161014b565b815260208301356101de8161014b565b602082015260408301356101f18161014b565b604082015261020260608401610163565b60608201525092915050565b600080600060c0848603121561022357600080fd5b833561022e8161014b565b925061023d856020860161017a565b915061024b60a08501610163565b90509250925092565b60006020828403121561026657600080fd5b81356102718161014b565b9392505050565b60008060a0838503121561028b57600080fd5b82356102968161014b565b91506102a5846020850161017a565b9050925092905056fea2646970667358221220a72b235cee9e15f0204d409da4142a8848470c95556c14f7d29cd0cd7c9c1b4e64736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "BAD_HOOK";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NOT_CFA";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NOT_OWNER";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract ISuperfluidToken";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "flowOperator";
                readonly type: "address";
            }, {
                readonly internalType: "int96";
                readonly name: "flowRate";
                readonly type: "int96";
            }];
            readonly internalType: "struct IConstantFlowAgreementHook.CFAHookParams";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly name: "onCreate";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract ISuperfluidToken";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "flowOperator";
                readonly type: "address";
            }, {
                readonly internalType: "int96";
                readonly name: "flowRate";
                readonly type: "int96";
            }];
            readonly internalType: "struct IConstantFlowAgreementHook.CFAHookParams";
            readonly name: "";
            readonly type: "tuple";
        }, {
            readonly internalType: "int96";
            readonly name: "";
            readonly type: "int96";
        }];
        readonly name: "onDelete";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract ISuperfluidToken";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "receiver";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "flowOperator";
                readonly type: "address";
            }, {
                readonly internalType: "int96";
                readonly name: "flowRate";
                readonly type: "int96";
            }];
            readonly internalType: "struct IConstantFlowAgreementHook.CFAHookParams";
            readonly name: "";
            readonly type: "tuple";
        }, {
            readonly internalType: "int96";
            readonly name: "";
            readonly type: "int96";
        }];
        readonly name: "onUpdate";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract ConstantFlowAgreementV1";
            readonly name: "_cfaV1";
            readonly type: "address";
        }];
        readonly name: "setCFA";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): BadCFAHookMockInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): BadCFAHookMock;
}
export {};
//# sourceMappingURL=BadCFAHookMock__factory.d.ts.map